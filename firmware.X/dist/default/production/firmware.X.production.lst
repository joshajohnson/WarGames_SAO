

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jan 27 15:10:16 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F1571 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  008C                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011D                     	;# 
   101  011D                     	;# 
   102  018C                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0197                     	;# 
   112  020C                     	;# 
   113  028C                     	;# 
   114  030C                     	;# 
   115  038C                     	;# 
   116  0391                     	;# 
   117  0392                     	;# 
   118  0393                     	;# 
   119  0691                     	;# 
   120  0692                     	;# 
   121  0693                     	;# 
   122  0694                     	;# 
   123  0695                     	;# 
   124  0D8E                     	;# 
   125  0D8F                     	;# 
   126  0D90                     	;# 
   127  0D91                     	;# 
   128  0D91                     	;# 
   129  0D92                     	;# 
   130  0D93                     	;# 
   131  0D93                     	;# 
   132  0D94                     	;# 
   133  0D95                     	;# 
   134  0D95                     	;# 
   135  0D96                     	;# 
   136  0D97                     	;# 
   137  0D97                     	;# 
   138  0D98                     	;# 
   139  0D99                     	;# 
   140  0D99                     	;# 
   141  0D9A                     	;# 
   142  0D9B                     	;# 
   143  0D9C                     	;# 
   144  0D9C                     	;# 
   145  0D9D                     	;# 
   146  0D9D                     	;# 
   147  0D9E                     	;# 
   148  0D9F                     	;# 
   149  0DA0                     	;# 
   150  0DA1                     	;# 
   151  0DA1                     	;# 
   152  0DA2                     	;# 
   153  0DA3                     	;# 
   154  0DA3                     	;# 
   155  0DA4                     	;# 
   156  0DA5                     	;# 
   157  0DA5                     	;# 
   158  0DA6                     	;# 
   159  0DA7                     	;# 
   160  0DA7                     	;# 
   161  0DA8                     	;# 
   162  0DA9                     	;# 
   163  0DA9                     	;# 
   164  0DAA                     	;# 
   165  0DAB                     	;# 
   166  0DAC                     	;# 
   167  0DAC                     	;# 
   168  0DAD                     	;# 
   169  0DAD                     	;# 
   170  0DAE                     	;# 
   171  0DAF                     	;# 
   172  0DB0                     	;# 
   173  0DB1                     	;# 
   174  0DB1                     	;# 
   175  0DB2                     	;# 
   176  0DB3                     	;# 
   177  0DB3                     	;# 
   178  0DB4                     	;# 
   179  0DB5                     	;# 
   180  0DB5                     	;# 
   181  0DB6                     	;# 
   182  0DB7                     	;# 
   183  0DB7                     	;# 
   184  0DB8                     	;# 
   185  0DB9                     	;# 
   186  0DB9                     	;# 
   187  0DBA                     	;# 
   188  0DBB                     	;# 
   189  0DBC                     	;# 
   190  0DBC                     	;# 
   191  0DBD                     	;# 
   192  0DBD                     	;# 
   193  0DBE                     	;# 
   194  0DBF                     	;# 
   195  0DC0                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE8                     	;# 
   202  0FE9                     	;# 
   203  0FEA                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210                           
   211                           	psect	stringtext1
   212  0159                     __pstringtext1:	
   213  0159                     main@positions:	
   214  0159  3405               	retlw	5
   215  015A  3409               	retlw	9
   216  015B  3403               	retlw	3
   217  015C  3407               	retlw	7
   218  015D  3408               	retlw	8
   219  015E  3402               	retlw	2
   220  015F  3406               	retlw	6
   221  0160  3404               	retlw	4
   222  0161  3401               	retlw	1
   223  0162                     __end_ofmain@positions:	
   224                           
   225                           	psect	stringtext2
   226  0145                     __pstringtext2:	
   227  0145                     displayLED@ledCathode:	
   228  0145  3400               	retlw	0
   229  0146  3402               	retlw	2
   230  0147  3401               	retlw	1
   231  0148  3402               	retlw	2
   232  0149  3400               	retlw	0
   233  014A  3404               	retlw	4
   234  014B  3401               	retlw	1
   235  014C  3401               	retlw	1
   236  014D  3400               	retlw	0
   237  014E  3400               	retlw	0
   238  014F                     __end_ofdisplayLED@ledCathode:	
   239                           
   240                           	psect	stringtext3
   241  014F                     __pstringtext3:	
   242  014F                     displayLED@ledAnode:	
   243  014F  3401               	retlw	1
   244  0150  3404               	retlw	4
   245  0151  3402               	retlw	2
   246  0152  3405               	retlw	5
   247  0153  3402               	retlw	2
   248  0154  3405               	retlw	5
   249  0155  3404               	retlw	4
   250  0156  3405               	retlw	5
   251  0157  3404               	retlw	4
   252  0158  3400               	retlw	0
   253  0159                     __end_ofdisplayLED@ledAnode:	
   254  000B                     _INTCON	set	11
   255  000C                     _PORTA	set	12
   256  005A                     _T0IF	set	90
   257  005D                     _T0IE	set	93
   258  0095                     _OPTION_REG	set	149
   259  009D                     _ADCON0	set	157
   260  0099                     _OSCCON	set	153
   261  008C                     _TRISA	set	140
   262  018C                     _ANSELA	set	396
   263  020C                     _WPUA	set	524
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  0027                     start_initialization:	
   269  0027                     __initialization:	
   270                           
   271                           ; Clear objects allocated to COMMON
   272  0027  01FA               	clrf	__pbssCOMMON& (0+127)
   273  0028  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   274                           
   275                           ; Clear objects allocated to BANK0
   276  0029  0020               	movlb	0	; select bank0
   277  002A  01A9               	clrf	__pbssBANK0& (0+127)
   278  002B                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  002B                     __end_of__initialization:	
   282  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   283  002C  0020               	movlb	0
   284  002D  28D3               	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMMON
   287  007A                     __pbssCOMMON:	
   288  007A                     _accumulator:	
   289  007A                     	ds	1
   290  007B                     _oneTwentyHertz:	
   291  007B                     	ds	1
   292                           
   293                           	psect	bssBANK0
   294  0029                     __pbssBANK0:	
   295  0029                     _sixtyHertz:	
   296  0029                     	ds	1
   297                           
   298                           	psect	cstackCOMMON
   299  0070                     __pcstackCOMMON:	
   300  0070                     ?_isr:	
   301  0070                     ??_isr:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307                           
   308                           ; 1 bytes @ 0x0
   309  0070                     	ds	2
   310  0072                     ?_displayLED:	
   311  0072                     displayLED@colour:	
   312                           ; 1 bytes @ 0x2
   313                           
   314                           
   315                           ; 1 bytes @ 0x2
   316  0072                     	ds	1
   317  0073                     displayLED@enable:	
   318                           
   319                           ; 1 bytes @ 0x3
   320  0073                     	ds	1
   321  0074                     ??_displayLED:	
   322                           
   323                           ; 1 bytes @ 0x4
   324  0074                     	ds	6
   325                           
   326                           	psect	cstackBANK0
   327  0020                     __pcstackBANK0:	
   328  0020                     displayLED@pos:	
   329                           
   330                           ; 1 bytes @ 0x0
   331  0020                     	ds	1
   332  0021                     ??_main:	
   333                           
   334                           ; 1 bytes @ 0x1
   335  0021                     	ds	2
   336  0023                     main@updateRate:	
   337                           
   338                           ; 1 bytes @ 0x3
   339  0023                     	ds	1
   340  0024                     main@colour:	
   341                           
   342                           ; 1 bytes @ 0x4
   343  0024                     	ds	1
   344  0025                     main@enable:	
   345                           
   346                           ; 1 bytes @ 0x5
   347  0025                     	ds	1
   348  0026                     main@accumulatorTwo:	
   349                           
   350                           ; 1 bytes @ 0x6
   351  0026                     	ds	1
   352  0027                     main@pos:	
   353                           
   354                           ; 1 bytes @ 0x7
   355  0027                     	ds	1
   356  0028                     main@numShown:	
   357                           
   358                           ; 1 bytes @ 0x8
   359  0028                     	ds	1
   360                           
   361                           	psect	maintext
   362  00D3                     __pmaintext:	
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 74 in file "main.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  pos             1    7[BANK0 ] char 
   373 ;;  numShown        1    8[BANK0 ] char 
   374 ;;  accumulatorT    1    6[BANK0 ] unsigned char 
   375 ;;  enable          1    5[BANK0 ] unsigned char 
   376 ;;  colour          1    4[BANK0 ] unsigned char 
   377 ;;  updateRate      1    3[BANK0 ] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : B1F/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1
   387 ;;      Params:         0       0       0
   388 ;;      Locals:         0       6       0
   389 ;;      Temps:          0       2       0
   390 ;;      Totals:         0       8       0
   391 ;;Total ram usage:        8 bytes
   392 ;; Hardware stack levels required when called:    2
   393 ;; This function calls:
   394 ;;		_displayLED
   395 ;; This function is called by:
   396 ;;		Startup code after reset
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _main
   402  00D3                     _main:	
   403                           
   404                           ;main.c: 78: OSCCON = 0b11110000;
   405                           
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   408  00D3  30F0               	movlw	240
   409  00D4  0021               	movlb	1	; select bank1
   410  00D5  0099               	movwf	25	;volatile
   411                           
   412                           ;main.c: 79: ANSELA = 0;
   413  00D6  0023               	movlb	3	; select bank3
   414  00D7  018C               	clrf	12	;volatile
   415                           
   416                           ;main.c: 80: ADCON0 = 0;
   417  00D8  0021               	movlb	1	; select bank1
   418  00D9  019D               	clrf	29	;volatile
   419                           
   420                           ;main.c: 81: TRISA = (1<<3)|(1<<4);
   421  00DA  3018               	movlw	24
   422  00DB  008C               	movwf	12	;volatile
   423                           
   424                           ;main.c: 82: PORTA = 0;
   425  00DC  0020               	movlb	0	; select bank0
   426  00DD  018C               	clrf	12	;volatile
   427                           
   428                           ;main.c: 83: WPUA = 0;
   429  00DE  0024               	movlb	4	; select bank4
   430  00DF  018C               	clrf	12	;volatile
   431                           
   432                           ;main.c: 86: OPTION_REG = 0b10000111;
   433  00E0  3087               	movlw	135
   434  00E1  0021               	movlb	1	; select bank1
   435  00E2  0095               	movwf	21	;volatile
   436                           
   437                           ;main.c: 87: INTCON = 0b10100000;
   438  00E3  30A0               	movlw	160
   439  00E4  008B               	movwf	11	;volatile
   440                           
   441                           ;main.c: 89: unsigned char colour = 0;
   442  00E5  0020               	movlb	0	; select bank0
   443  00E6  01A4               	clrf	main@colour
   444                           
   445                           ;main.c: 90: unsigned char enable = 1;
   446  00E7  01A5               	clrf	main@enable
   447  00E8  0AA5               	incf	main@enable,f
   448                           
   449                           ;main.c: 91: signed char numShown = -1;
   450  00E9  01A8               	clrf	main@numShown
   451  00EA  03A8               	decf	main@numShown,f
   452                           
   453                           ;main.c: 92: unsigned char accumulatorTwo = 0;
   454  00EB  01A6               	clrf	main@accumulatorTwo
   455                           
   456                           ;main.c: 93: unsigned char updateRate = 60;
   457  00EC  303C               	movlw	60
   458  00ED  00A1               	movwf	??_main
   459  00EE  0821               	movf	??_main,w
   460  00EF  00A3               	movwf	main@updateRate
   461  00F0                     l662:	
   462                           ;main.c: 95: const unsigned char positions[9] = {5,9,3,7,8,2,6,4,1};
   463                           ;main.c: 97: while(1)
   464                           
   465                           
   466                           ;main.c: 98: {
   467                           ;main.c: 101: if (sixtyHertz)
   468  00F0  0829               	movf	_sixtyHertz,w	;volatile
   469  00F1  1903               	btfsc	3,2
   470  00F2  2909               	goto	l678
   471                           
   472                           ;main.c: 102: {
   473                           ;main.c: 103: sixtyHertz = 0;
   474  00F3  01A9               	clrf	_sixtyHertz	;volatile
   475                           
   476                           ;main.c: 105: if (accumulatorTwo >= updateRate)
   477  00F4  0823               	movf	main@updateRate,w
   478  00F5  0226               	subwf	main@accumulatorTwo,w
   479  00F6  1C03               	skipc
   480  00F7  2905               	goto	l676
   481                           
   482                           ;main.c: 106: {
   483                           ;main.c: 107: accumulatorTwo = 0;
   484  00F8  01A6               	clrf	main@accumulatorTwo
   485                           
   486                           ;main.c: 108: (numShown >= 9) ? numShown = 0 : numShown++;
   487  00F9  0828               	movf	main@numShown,w
   488  00FA  3A80               	xorlw	128
   489  00FB  3E77               	addlw	-137
   490  00FC  1C03               	skipc
   491  00FD  2900               	goto	l674
   492  00FE  01A8               	clrf	main@numShown
   493  00FF  2909               	goto	l678
   494  0100                     l674:	
   495  0100  3001               	movlw	1
   496  0101  00A1               	movwf	??_main
   497  0102  0821               	movf	??_main,w
   498  0103  07A8               	addwf	main@numShown,f
   499                           
   500                           ;main.c: 109: }
   501  0104  2909               	goto	l678
   502  0105                     l676:	
   503                           
   504                           ;main.c: 110: else accumulatorTwo++;
   505  0105  3001               	movlw	1
   506  0106  00A1               	movwf	??_main
   507  0107  0821               	movf	??_main,w
   508  0108  07A6               	addwf	main@accumulatorTwo,f
   509  0109                     l678:	
   510                           
   511                           ;main.c: 111: }
   512                           ;main.c: 113: for (signed char pos = 0; pos <= numShown; pos++)
   513  0109  01A7               	clrf	main@pos
   514  010A                     l694:	
   515  010A  0828               	movf	main@numShown,w
   516  010B  3A80               	xorlw	128
   517  010C  00A1               	movwf	??_main
   518  010D  0827               	movf	main@pos,w
   519  010E  3A80               	xorlw	128
   520  010F  02A1               	subwf	??_main,f
   521  0110  1C03               	btfss	3,0
   522  0111  28F0               	goto	l662
   523                           
   524                           ;main.c: 114: {
   525                           ;main.c: 115: (pos % 2 == 0) ? colour = 0 : colour = 1;
   526  0112  0827               	movf	main@pos,w
   527  0113  00A1               	movwf	??_main
   528  0114  01A2               	clrf	??_main+1
   529  0115  1BA1               	btfsc	??_main,7
   530  0116  03A2               	decf	??_main+1,f
   531  0117  1821               	btfsc	??_main,0
   532  0118  291B               	goto	l68
   533  0119  01A4               	clrf	main@colour
   534  011A  291D               	goto	l684
   535  011B                     l68:	
   536  011B  01A4               	clrf	main@colour
   537  011C  0AA4               	incf	main@colour,f
   538  011D                     l684:	
   539                           
   540                           ;main.c: 116: (numShown == 9) ? enable = 0 : enable = 1;
   541  011D  3009               	movlw	9
   542  011E  0628               	xorwf	main@numShown,w
   543  011F  1D03               	btfss	3,2
   544  0120  2923               	goto	l72
   545  0121  01A5               	clrf	main@enable
   546  0122  2925               	goto	l688
   547  0123                     l72:	
   548  0123  01A5               	clrf	main@enable
   549  0124  0AA5               	incf	main@enable,f
   550  0125                     l688:	
   551                           
   552                           ;main.c: 117: displayLED(positions[pos], colour, enable);
   553  0125  0824               	movf	main@colour,w
   554  0126  00A1               	movwf	??_main
   555  0127  0821               	movf	??_main,w
   556  0128  00F2               	movwf	displayLED@colour
   557  0129  0825               	movf	main@enable,w
   558  012A  00A2               	movwf	??_main+1
   559  012B  0822               	movf	??_main+1,w
   560  012C  00F3               	movwf	displayLED@enable
   561  012D  0827               	movf	main@pos,w
   562  012E  3E59               	addlw	low (main@positions| (0+32768))
   563  012F  0084               	movwf	4
   564  0130  3081               	movlw	high (main@positions| (0+32768))
   565  0131  1803               	skipnc
   566  0132  3E01               	addlw	1
   567  0133  0085               	movwf	5
   568  0134  0800               	movf	0,w	;code access
   569  0135  202E               	fcall	_displayLED
   570                           
   571                           ;main.c: 118: _delay((unsigned long)((500)*(32000000/4000000.0)));
   572  0136  3006               	movlw	6
   573  0137  0020               	movlb	0	; select bank0
   574  0138  00A1               	movwf	??_main
   575  0139  3030               	movlw	48
   576  013A                     u547:	
   577  013A  0B89               	decfsz	9,f
   578  013B  293A               	goto	u547
   579  013C  0BA1               	decfsz	??_main,f
   580  013D  293A               	goto	u547
   581  013E  0000               	nop
   582  013F  3001               	movlw	1
   583  0140  0020               	movlb	0	; select bank0
   584  0141  00A1               	movwf	??_main
   585  0142  0821               	movf	??_main,w
   586  0143  07A7               	addwf	main@pos,f
   587  0144  290A               	goto	l694
   588  0145                     __end_of_main:	
   589                           
   590                           	psect	text1
   591  002E                     __ptext1:	
   592 ;; *************** function _displayLED *****************
   593 ;; Defined at:
   594 ;;		line 39 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  pos             1    wreg     unsigned char 
   597 ;;  colour          1    2[COMMON] unsigned char 
   598 ;;  enable          1    3[COMMON] unsigned char 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  pos             1    0[BANK0 ] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1
   610 ;;      Params:         2       0       0
   611 ;;      Locals:         0       1       0
   612 ;;      Temps:          6       0       0
   613 ;;      Totals:         8       1       0
   614 ;;Total ram usage:        9 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _displayLED
   626  002E                     _displayLED:	
   627                           
   628                           ;incstack = 0
   629                           ; Regs used in _displayLED: [wreg-fsr0h+status,2+status,0+pclath]
   630                           ;displayLED@pos stored from wreg
   631  002E  0020               	movlb	0	; select bank0
   632  002F  00A0               	movwf	displayLED@pos
   633                           
   634                           ;main.c: 45: const unsigned char ledAnode[10] = {1,4,2,5,2,5,4,5,4};
   635                           ;main.c: 46: const unsigned char ledCathode[10] = {0,2,1,2,0,4,1,1,0};
   636                           ;main.c: 48: if (enable)
   637  0030  0873               	movf	displayLED@enable,w
   638  0031  1903               	btfsc	3,2
   639  0032  28CE               	goto	l642
   640                           
   641                           ;main.c: 49: {
   642                           ;main.c: 50: if (colour == 0)
   643  0033  0872               	movf	displayLED@colour,w
   644  0034  1D03               	btfss	3,2
   645  0035  287E               	goto	l636
   646                           
   647                           ;main.c: 51: {
   648                           ;main.c: 52: TRISA = 0xFF & ~(1<<ledAnode[pos-1]|1<<ledCathode[pos-1]);
   649  0036  3001               	movlw	1
   650  0037  00F4               	movwf	??_displayLED
   651  0038  0820               	movf	displayLED@pos,w
   652  0039  3EFF               	addlw	255
   653  003A  00F5               	movwf	??_displayLED+1
   654  003B  30FF               	movlw	255
   655  003C  1803               	skipnc
   656  003D  3000               	movlw	0
   657  003E  00F6               	movwf	??_displayLED+2
   658  003F  3045               	movlw	low (displayLED@ledCathode| (0+32768))
   659  0040  0775               	addwf	??_displayLED+1,w
   660  0041  0084               	movwf	4
   661  0042  3081               	movlw	high (displayLED@ledCathode| (0+32768))
   662  0043  3D76               	addwfc	??_displayLED+2,w
   663  0044  0085               	movwf	5
   664  0045  0800               	movf	0,w	;code access
   665  0046  0A89               	incf	9,f
   666  0047  2849               	goto	u414
   667  0048                     u415:	
   668  0048  35F4               	lslf	??_displayLED,f
   669  0049                     u414:	
   670  0049  0B89               	decfsz	9,f
   671  004A  2848               	goto	u415
   672  004B  3001               	movlw	1
   673  004C  00F7               	movwf	??_displayLED+3
   674  004D  0820               	movf	displayLED@pos,w
   675  004E  3EFF               	addlw	255
   676  004F  00F8               	movwf	??_displayLED+4
   677  0050  30FF               	movlw	255
   678  0051  1803               	skipnc
   679  0052  3000               	movlw	0
   680  0053  00F9               	movwf	??_displayLED+5
   681  0054  304F               	movlw	low (displayLED@ledAnode| (0+32768))
   682  0055  0778               	addwf	??_displayLED+4,w
   683  0056  0084               	movwf	4
   684  0057  3081               	movlw	high (displayLED@ledAnode| (0+32768))
   685  0058  3D79               	addwfc	??_displayLED+5,w
   686  0059  0085               	movwf	5
   687  005A  0800               	movf	0,w	;code access
   688  005B  0A89               	incf	9,f
   689  005C  285E               	goto	u424
   690  005D                     u425:	
   691  005D  35F7               	lslf	??_displayLED+3,f
   692  005E                     u424:	
   693  005E  0B89               	decfsz	9,f
   694  005F  285D               	goto	u425
   695  0060  0877               	movf	??_displayLED+3,w
   696  0061  0474               	iorwf	??_displayLED,w
   697  0062  3AFF               	xorlw	255
   698  0063  0021               	movlb	1	; select bank1
   699  0064  008C               	movwf	12	;volatile
   700                           
   701                           ;main.c: 53: PORTA = 0 | (1<<ledAnode[pos-1]);
   702  0065  3001               	movlw	1
   703  0066  00F4               	movwf	??_displayLED
   704  0067  0020               	movlb	0	; select bank0
   705  0068  0820               	movf	displayLED@pos,w
   706  0069  3EFF               	addlw	255
   707  006A  00F5               	movwf	??_displayLED+1
   708  006B  30FF               	movlw	255
   709  006C  1803               	skipnc
   710  006D  3000               	movlw	0
   711  006E  00F6               	movwf	??_displayLED+2
   712  006F  304F               	movlw	low (displayLED@ledAnode| (0+32768))
   713  0070  0775               	addwf	??_displayLED+1,w
   714  0071  0084               	movwf	4
   715  0072  3081               	movlw	high (displayLED@ledAnode| (0+32768))
   716  0073  3D76               	addwfc	??_displayLED+2,w
   717  0074  0085               	movwf	5
   718  0075  0800               	movf	0,w	;code access
   719  0076  0A89               	incf	9,f
   720  0077  2879               	goto	u434
   721  0078                     u435:	
   722  0078  35F4               	lslf	??_displayLED,f
   723  0079                     u434:	
   724  0079  0B89               	decfsz	9,f
   725  007A  2878               	goto	u435
   726  007B  0874               	movf	??_displayLED,w
   727  007C  008C               	movwf	12	;volatile
   728                           
   729                           ;main.c: 54: }
   730  007D  0008               	return
   731  007E                     l636:	
   732                           
   733                           ;main.c: 55: else if (colour == 1)
   734  007E  0372               	decf	displayLED@colour,w
   735  007F  1D03               	btfss	3,2
   736  0080  28C9               	goto	l640
   737                           
   738                           ;main.c: 56: {
   739                           ;main.c: 57: TRISA = 0xFF & ~(1<<ledAnode[pos-1]|1<<ledCathode[pos-1]);
   740  0081  3001               	movlw	1
   741  0082  00F4               	movwf	??_displayLED
   742  0083  0820               	movf	displayLED@pos,w
   743  0084  3EFF               	addlw	255
   744  0085  00F5               	movwf	??_displayLED+1
   745  0086  30FF               	movlw	255
   746  0087  1803               	skipnc
   747  0088  3000               	movlw	0
   748  0089  00F6               	movwf	??_displayLED+2
   749  008A  3045               	movlw	low (displayLED@ledCathode| (0+32768))
   750  008B  0775               	addwf	??_displayLED+1,w
   751  008C  0084               	movwf	4
   752  008D  3081               	movlw	high (displayLED@ledCathode| (0+32768))
   753  008E  3D76               	addwfc	??_displayLED+2,w
   754  008F  0085               	movwf	5
   755  0090  0800               	movf	0,w	;code access
   756  0091  0A89               	incf	9,f
   757  0092  2894               	goto	u454
   758  0093                     u455:	
   759  0093  35F4               	lslf	??_displayLED,f
   760  0094                     u454:	
   761  0094  0B89               	decfsz	9,f
   762  0095  2893               	goto	u455
   763  0096  3001               	movlw	1
   764  0097  00F7               	movwf	??_displayLED+3
   765  0098  0820               	movf	displayLED@pos,w
   766  0099  3EFF               	addlw	255
   767  009A  00F8               	movwf	??_displayLED+4
   768  009B  30FF               	movlw	255
   769  009C  1803               	skipnc
   770  009D  3000               	movlw	0
   771  009E  00F9               	movwf	??_displayLED+5
   772  009F  304F               	movlw	low (displayLED@ledAnode| (0+32768))
   773  00A0  0778               	addwf	??_displayLED+4,w
   774  00A1  0084               	movwf	4
   775  00A2  3081               	movlw	high (displayLED@ledAnode| (0+32768))
   776  00A3  3D79               	addwfc	??_displayLED+5,w
   777  00A4  0085               	movwf	5
   778  00A5  0800               	movf	0,w	;code access
   779  00A6  0A89               	incf	9,f
   780  00A7  28A9               	goto	u464
   781  00A8                     u465:	
   782  00A8  35F7               	lslf	??_displayLED+3,f
   783  00A9                     u464:	
   784  00A9  0B89               	decfsz	9,f
   785  00AA  28A8               	goto	u465
   786  00AB  0877               	movf	??_displayLED+3,w
   787  00AC  0474               	iorwf	??_displayLED,w
   788  00AD  3AFF               	xorlw	255
   789  00AE  0021               	movlb	1	; select bank1
   790  00AF  008C               	movwf	12	;volatile
   791                           
   792                           ;main.c: 58: PORTA = 0 | (1<<ledCathode[pos-1]);
   793  00B0  3001               	movlw	1
   794  00B1  00F4               	movwf	??_displayLED
   795  00B2  0020               	movlb	0	; select bank0
   796  00B3  0820               	movf	displayLED@pos,w
   797  00B4  3EFF               	addlw	255
   798  00B5  00F5               	movwf	??_displayLED+1
   799  00B6  30FF               	movlw	255
   800  00B7  1803               	skipnc
   801  00B8  3000               	movlw	0
   802  00B9  00F6               	movwf	??_displayLED+2
   803  00BA  3045               	movlw	low (displayLED@ledCathode| (0+32768))
   804  00BB  0775               	addwf	??_displayLED+1,w
   805  00BC  0084               	movwf	4
   806  00BD  3081               	movlw	high (displayLED@ledCathode| (0+32768))
   807  00BE  3D76               	addwfc	??_displayLED+2,w
   808  00BF  0085               	movwf	5
   809  00C0  0800               	movf	0,w	;code access
   810  00C1  0A89               	incf	9,f
   811  00C2  28C4               	goto	u474
   812  00C3                     u475:	
   813  00C3  35F4               	lslf	??_displayLED,f
   814  00C4                     u474:	
   815  00C4  0B89               	decfsz	9,f
   816  00C5  28C3               	goto	u475
   817  00C6  0874               	movf	??_displayLED,w
   818  00C7  008C               	movwf	12	;volatile
   819                           
   820                           ;main.c: 59: }
   821  00C8  0008               	return
   822  00C9                     l640:	
   823                           
   824                           ;main.c: 60: else
   825                           ;main.c: 61: {
   826                           ;main.c: 62: TRISA = 0;
   827  00C9  0021               	movlb	1	; select bank1
   828  00CA  018C               	clrf	12	;volatile
   829                           
   830                           ;main.c: 63: PORTA= 0;
   831  00CB  0020               	movlb	0	; select bank0
   832  00CC  018C               	clrf	12	;volatile
   833                           
   834                           ;main.c: 64: }
   835                           ;main.c: 65: }
   836  00CD  0008               	return
   837  00CE                     l642:	
   838                           
   839                           ;main.c: 66: else
   840                           ;main.c: 67: {
   841                           ;main.c: 68: TRISA = 0;
   842  00CE  0021               	movlb	1	; select bank1
   843  00CF  018C               	clrf	12	;volatile
   844                           
   845                           ;main.c: 69: PORTA= 0;
   846  00D0  0020               	movlb	0	; select bank0
   847  00D1  018C               	clrf	12	;volatile
   848  00D2  0008               	return
   849  00D3                     __end_of_displayLED:	
   850                           
   851                           	psect	intentry
   852  0004                     __pintentry:	
   853 ;; *************** function _isr *****************
   854 ;; Defined at:
   855 ;;		line 15 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1
   869 ;;      Params:         0       0       0
   870 ;;      Locals:         0       0       0
   871 ;;      Temps:          2       0       0
   872 ;;      Totals:         2       0       0
   873 ;;Total ram usage:        2 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		Interrupt level 1
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882  0004                     _isr:	
   883                           
   884                           ;incstack = 0
   885  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   886                           
   887                           ; Regs used in _isr: [wreg+status,2+status,0]
   888  0005  3180               	pagesel	$
   889  0006  0020               	movlb	0	; select bank0
   890  0007  087F               	movf	127,w
   891  0008  00F1               	movwf	??_isr+1
   892                           
   893                           ;main.c: 18: if(T0IE && T0IF)
   894  0009  1A8B               	btfsc	11,5	;volatile
   895  000A  1D0B               	btfss	11,2	;volatile
   896  000B  2822               	goto	i1l37
   897                           
   898                           ;main.c: 19: {
   899                           ;main.c: 20: T0IF = 0;
   900  000C  110B               	bcf	11,2	;volatile
   901                           
   902                           ;main.c: 21: oneTwentyHertz = 1;
   903  000D  3001               	movlw	1
   904  000E  00F0               	movwf	??_isr
   905  000F  0870               	movf	??_isr,w
   906  0010  00FB               	movwf	_oneTwentyHertz	;volatile
   907                           
   908                           ;main.c: 24: if (oneTwentyHertz)
   909  0011  087B               	movf	_oneTwentyHertz,w	;volatile
   910  0012  1903               	btfsc	3,2
   911  0013  2822               	goto	i1l37
   912                           
   913                           ;main.c: 25: {
   914                           ;main.c: 26: oneTwentyHertz = 0;
   915  0014  01FB               	clrf	_oneTwentyHertz	;volatile
   916                           
   917                           ;main.c: 27: if (accumulator >= 1)
   918  0015  087A               	movf	_accumulator,w	;volatile
   919  0016  1903               	btfsc	3,2
   920  0017  281E               	goto	i1l576
   921                           
   922                           ;main.c: 28: {
   923                           ;main.c: 29: accumulator = 0;
   924  0018  01FA               	clrf	_accumulator	;volatile
   925                           
   926                           ;main.c: 30: sixtyHertz = 1;
   927  0019  3001               	movlw	1
   928  001A  00F0               	movwf	??_isr
   929  001B  0870               	movf	??_isr,w
   930  001C  00A9               	movwf	_sixtyHertz	;volatile
   931                           
   932                           ;main.c: 31: }
   933  001D  2822               	goto	i1l37
   934  001E                     i1l576:	
   935                           
   936                           ;main.c: 32: else accumulator++;
   937  001E  3001               	movlw	1
   938  001F  00F0               	movwf	??_isr
   939  0020  0870               	movf	??_isr,w
   940  0021  07FA               	addwf	_accumulator,f	;volatile
   941  0022                     i1l37:	
   942  0022  0871               	movf	??_isr+1,w
   943  0023  00FF               	movwf	127
   944  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   945  0025  0009               	retfie
   946  0026                     __end_of_isr:	
   947  007E                     btemp	set	126	;btemp
   948  007E                     int$flags	set	126
   949  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    29
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      10
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_displayLED

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayLED

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     764
                                              1 BANK0      8     8      0
                         _displayLED
 ---------------------------------------------------------------------------------
 (1) _displayLED                                           9     7      2     409
                                              2 COMMON     8     6      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayLED

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      16       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9       A       6       12.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      16       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jan 27 15:10:16 2019

                          l72 0123                            l68 011B                           l640 00C9  
                         l642 00CE                           l636 007E                           l662 00F0  
                         l674 0100                           l684 011D                           l676 0105  
                         l694 010A                           l678 0109                           l688 0125  
                         u414 0049                           u415 0048                           u424 005E  
                         u425 005D                           u434 0079                           u435 0078  
                         u454 0094                           u455 0093                           u464 00A9  
                         u465 00A8                           u474 00C4                           u475 00C3  
                         u547 013A                           _isr 0004                           wreg 0009  
                __CFG_LVP$OFF 0000                          ?_isr 0070                          _T0IE 005D  
                        _T0IF 005A                          i1l37 0022                          _WPUA 020C  
                        _main 00D3                          fsr0h 0005                          indf0 0000  
                        fsr0l 0004                          btemp 007E                          start 0026  
                       ??_isr 0070                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       i1l576 001E                         _PORTA 000C                         _TRISA 008C  
                main@numShown 0028                         status 0003                         wtemp0 007E  
              __CFG_MCLRE$OFF 0000               __initialization 0027                  __end_of_main 0145  
                      ??_main 0021                        _ADCON0 009D                        _ANSELA 018C  
               displayLED@pos 0020                        _INTCON 000B                        _OSCCON 0099  
          main@accumulatorTwo 0026                 main@positions 0159       __end_of__initialization 002B  
              __pcstackCOMMON 0070                    __pbssBANK0 0029                    __pmaintext 00D3  
                  __pintentry 0004                    _displayLED 002E    __end_ofdisplayLED@ledAnode 0159  
                     __ptext1 002E                  __size_of_isr 0022              displayLED@enable 0073  
            displayLED@colour 0072                       main@pos 0027          end_of_initialization 002B  
              main@updateRate 0023              __CFG_FOSC$INTOSC 0000                   ?_displayLED 0072  
                  _sixtyHertz 0029                    main@enable 0025                    main@colour 0024  
         start_initialization 0027                   __end_of_isr 0026                   _accumulator 007A  
         __size_of_displayLED 00A5                   __pbssCOMMON 007A                     ___latbits 0000  
               __pcstackBANK0 0020  __end_ofdisplayLED@ledCathode 014F            displayLED@ledAnode 014F  
       __end_ofmain@positions 0162                  ??_displayLED 0074            __end_of_displayLED 00D3  
        displayLED@ledCathode 0145                 __size_of_main 0072                      int$flags 007E  
                    intlevel1 0000                 __pstringtext1 0159                 __pstringtext2 0145  
               __pstringtext3 014F                _oneTwentyHertz 007B                    _OPTION_REG 0095  
