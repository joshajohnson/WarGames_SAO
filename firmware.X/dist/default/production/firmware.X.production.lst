

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 13 20:32:42 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F1571 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  008C                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  010C                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0115                     	;# 
    97  0116                     	;# 
    98  0117                     	;# 
    99  0118                     	;# 
   100  0119                     	;# 
   101  011D                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  0191                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0197                     	;# 
   113  020C                     	;# 
   114  028C                     	;# 
   115  030C                     	;# 
   116  038C                     	;# 
   117  0391                     	;# 
   118  0392                     	;# 
   119  0393                     	;# 
   120  0691                     	;# 
   121  0692                     	;# 
   122  0693                     	;# 
   123  0694                     	;# 
   124  0695                     	;# 
   125  0D8E                     	;# 
   126  0D8F                     	;# 
   127  0D90                     	;# 
   128  0D91                     	;# 
   129  0D91                     	;# 
   130  0D92                     	;# 
   131  0D93                     	;# 
   132  0D93                     	;# 
   133  0D94                     	;# 
   134  0D95                     	;# 
   135  0D95                     	;# 
   136  0D96                     	;# 
   137  0D97                     	;# 
   138  0D97                     	;# 
   139  0D98                     	;# 
   140  0D99                     	;# 
   141  0D99                     	;# 
   142  0D9A                     	;# 
   143  0D9B                     	;# 
   144  0D9C                     	;# 
   145  0D9C                     	;# 
   146  0D9D                     	;# 
   147  0D9D                     	;# 
   148  0D9E                     	;# 
   149  0D9F                     	;# 
   150  0DA0                     	;# 
   151  0DA1                     	;# 
   152  0DA1                     	;# 
   153  0DA2                     	;# 
   154  0DA3                     	;# 
   155  0DA3                     	;# 
   156  0DA4                     	;# 
   157  0DA5                     	;# 
   158  0DA5                     	;# 
   159  0DA6                     	;# 
   160  0DA7                     	;# 
   161  0DA7                     	;# 
   162  0DA8                     	;# 
   163  0DA9                     	;# 
   164  0DA9                     	;# 
   165  0DAA                     	;# 
   166  0DAB                     	;# 
   167  0DAC                     	;# 
   168  0DAC                     	;# 
   169  0DAD                     	;# 
   170  0DAD                     	;# 
   171  0DAE                     	;# 
   172  0DAF                     	;# 
   173  0DB0                     	;# 
   174  0DB1                     	;# 
   175  0DB1                     	;# 
   176  0DB2                     	;# 
   177  0DB3                     	;# 
   178  0DB3                     	;# 
   179  0DB4                     	;# 
   180  0DB5                     	;# 
   181  0DB5                     	;# 
   182  0DB6                     	;# 
   183  0DB7                     	;# 
   184  0DB7                     	;# 
   185  0DB8                     	;# 
   186  0DB9                     	;# 
   187  0DB9                     	;# 
   188  0DBA                     	;# 
   189  0DBB                     	;# 
   190  0DBC                     	;# 
   191  0DBC                     	;# 
   192  0DBD                     	;# 
   193  0DBD                     	;# 
   194  0DBE                     	;# 
   195  0DBF                     	;# 
   196  0DC0                     	;# 
   197  0FE4                     	;# 
   198  0FE5                     	;# 
   199  0FE6                     	;# 
   200  0FE7                     	;# 
   201  0FE8                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEE                     	;# 
   210  0FEF                     	;# 
   211                           
   212                           	psect	stringtext1
   213  01B2                     __pstringtext1:	
   214  01B2                     _positions:	
   215  01B2  3405               	retlw	5
   216  01B3  3409               	retlw	9
   217  01B4  3403               	retlw	3
   218  01B5  3407               	retlw	7
   219  01B6  3408               	retlw	8
   220  01B7  3402               	retlw	2
   221  01B8  3406               	retlw	6
   222  01B9  3404               	retlw	4
   223  01BA  3401               	retlw	1
   224  01BB  3405               	retlw	5
   225  01BC  3409               	retlw	9
   226  01BD  3401               	retlw	1
   227  01BE  3407               	retlw	7
   228  01BF  3408               	retlw	8
   229  01C0  3402               	retlw	2
   230  01C1  3404               	retlw	4
   231  01C2  3406               	retlw	6
   232  01C3  3403               	retlw	3
   233  01C4  3405               	retlw	5
   234  01C5  3407               	retlw	7
   235  01C6  3401               	retlw	1
   236  01C7  3409               	retlw	9
   237  01C8  3408               	retlw	8
   238  01C9  3402               	retlw	2
   239  01CA  3406               	retlw	6
   240  01CB  3404               	retlw	4
   241  01CC  3403               	retlw	3
   242  01CD  3405               	retlw	5
   243  01CE  3409               	retlw	9
   244  01CF  3401               	retlw	1
   245  01D0  3407               	retlw	7
   246  01D1  3408               	retlw	8
   247  01D2  3402               	retlw	2
   248  01D3  3406               	retlw	6
   249  01D4  3404               	retlw	4
   250  01D5  3403               	retlw	3
   251  01D6  3405               	retlw	5
   252  01D7  3403               	retlw	3
   253  01D8  3409               	retlw	9
   254  01D9  3401               	retlw	1
   255  01DA  3402               	retlw	2
   256  01DB  3408               	retlw	8
   257  01DC  3407               	retlw	7
   258  01DD  3404               	retlw	4
   259  01DE  3406               	retlw	6
   260  01DF  3405               	retlw	5
   261  01E0  3409               	retlw	9
   262  01E1  3401               	retlw	1
   263  01E2  3407               	retlw	7
   264  01E3  3408               	retlw	8
   265  01E4  3402               	retlw	2
   266  01E5  3403               	retlw	3
   267  01E6  3404               	retlw	4
   268  01E7  3406               	retlw	6
   269  01E8  3405               	retlw	5
   270  01E9  3409               	retlw	9
   271  01EA  3403               	retlw	3
   272  01EB  3407               	retlw	7
   273  01EC  3408               	retlw	8
   274  01ED  3402               	retlw	2
   275  01EE  3401               	retlw	1
   276  01EF  3406               	retlw	6
   277  01F0  3404               	retlw	4
   278  01F1  3405               	retlw	5
   279  01F2  3403               	retlw	3
   280  01F3  3407               	retlw	7
   281  01F4  3401               	retlw	1
   282  01F5  3402               	retlw	2
   283  01F6  3408               	retlw	8
   284  01F7  3409               	retlw	9
   285  01F8  3406               	retlw	6
   286  01F9  3404               	retlw	4
   287  01FA  3405               	retlw	5
   288  01FB  3403               	retlw	3
   289  01FC  3409               	retlw	9
   290  01FD  3401               	retlw	1
   291  01FE  3402               	retlw	2
   292  01FF  3408               	retlw	8
   293  0200  3406               	retlw	6
   294  0201  3404               	retlw	4
   295  0202  3407               	retlw	7
   296  0203  3405               	retlw	5
   297  0204  3407               	retlw	7
   298  0205  3403               	retlw	3
   299  0206  3409               	retlw	9
   300  0207  3408               	retlw	8
   301  0208  3402               	retlw	2
   302  0209  3406               	retlw	6
   303  020A  3404               	retlw	4
   304  020B  3401               	retlw	1
   305  020C  3405               	retlw	5
   306  020D  3407               	retlw	7
   307  020E  3403               	retlw	3
   308  020F  3409               	retlw	9
   309  0210  3408               	retlw	8
   310  0211  3402               	retlw	2
   311  0212  3401               	retlw	1
   312  0213  3406               	retlw	6
   313  0214  3404               	retlw	4
   314  0215  3405               	retlw	5
   315  0216  3401               	retlw	1
   316  0217  3407               	retlw	7
   317  0218  3403               	retlw	3
   318  0219  3402               	retlw	2
   319  021A  3408               	retlw	8
   320  021B  3409               	retlw	9
   321  021C  3404               	retlw	4
   322  021D  3406               	retlw	6
   323  021E  3405               	retlw	5
   324  021F  3403               	retlw	3
   325  0220  3407               	retlw	7
   326  0221  3401               	retlw	1
   327  0222  3402               	retlw	2
   328  0223  3408               	retlw	8
   329  0224  3409               	retlw	9
   330  0225  3406               	retlw	6
   331  0226  3404               	retlw	4
   332  0227  3405               	retlw	5
   333  0228  3409               	retlw	9
   334  0229  3403               	retlw	3
   335  022A  3407               	retlw	7
   336  022B  3408               	retlw	8
   337  022C  3402               	retlw	2
   338  022D  3406               	retlw	6
   339  022E  3404               	retlw	4
   340  022F  3401               	retlw	1
   341  0230  3405               	retlw	5
   342  0231  3401               	retlw	1
   343  0232  3409               	retlw	9
   344  0233  3403               	retlw	3
   345  0234  3402               	retlw	2
   346  0235  3408               	retlw	8
   347  0236  3406               	retlw	6
   348  0237  3404               	retlw	4
   349  0238  3407               	retlw	7
   350  0239                     __end_of_positions:	
   351                           
   352                           	psect	stringtext2
   353  0254                     __pstringtext2:	
   354  0254                     displayLED@ledCathode:	
   355  0254  3400               	retlw	0
   356  0255  3402               	retlw	2
   357  0256  3401               	retlw	1
   358  0257  3402               	retlw	2
   359  0258  3400               	retlw	0
   360  0259  3404               	retlw	4
   361  025A  3401               	retlw	1
   362  025B  3401               	retlw	1
   363  025C  3400               	retlw	0
   364  025D  3400               	retlw	0
   365  025E                     __end_ofdisplayLED@ledCathode:	
   366                           
   367                           	psect	stringtext3
   368  025E                     __pstringtext3:	
   369  025E                     displayLED@ledAnode:	
   370  025E  3401               	retlw	1
   371  025F  3404               	retlw	4
   372  0260  3402               	retlw	2
   373  0261  3405               	retlw	5
   374  0262  3402               	retlw	2
   375  0263  3405               	retlw	5
   376  0264  3404               	retlw	4
   377  0265  3405               	retlw	5
   378  0266  3404               	retlw	4
   379  0267  3400               	retlw	0
   380  0268                     __end_ofdisplayLED@ledAnode:	
   381  000B                     _INTCON	set	11
   382  000C                     _PORTA	set	12
   383  005A                     _T0IF	set	90
   384  005D                     _T0IE	set	93
   385  0095                     _OPTION_REG	set	149
   386  009D                     _ADCON0	set	157
   387  0099                     _OSCCON	set	153
   388  008C                     _TRISA	set	140
   389  018C                     _ANSELA	set	396
   390  020C                     _WPUA	set	524
   391                           
   392                           ; #config settings
   393  0000                     
   394                           	psect	cinit
   395  0027                     start_initialization:	
   396  0027                     __initialization:	
   397                           
   398                           ; Clear objects allocated to COMMON
   399  0027  01FA               	clrf	__pbssCOMMON& (0+127)
   400  0028  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   401                           
   402                           ; Clear objects allocated to BANK0
   403  0029  0020               	movlb	0	; select bank0
   404  002A  01B8               	clrf	__pbssBANK0& (0+127)
   405  002B                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  002B                     __end_of__initialization:	
   409  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   410  002C  0020               	movlb	0
   411  002D  282E               	ljmp	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMMON
   414  007A                     __pbssCOMMON:	
   415  007A                     _accumulator:	
   416  007A                     	ds	1
   417  007B                     _oneTwentyHertz:	
   418  007B                     	ds	1
   419                           
   420                           	psect	bssBANK0
   421  0038                     __pbssBANK0:	
   422  0038                     _sixtyHertz:	
   423  0038                     	ds	1
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:	
   427  0070                     ?_isr:	
   428  0070                     ??_isr:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 1 bytes @ 0x0
   436  0070                     	ds	2
   437  0072                     ?___wmul:	
   438  0072                     ___wmul@multiplier:	
   439                           ; 2 bytes @ 0x2
   440                           
   441                           
   442                           ; 2 bytes @ 0x2
   443  0072                     	ds	2
   444  0074                     ___wmul@multiplicand:	
   445                           
   446                           ; 2 bytes @ 0x4
   447  0074                     	ds	2
   448  0076                     ??___wmul:	
   449  0076                     ___wmul@product:	
   450                           ; 1 bytes @ 0x6
   451                           
   452                           
   453                           ; 2 bytes @ 0x6
   454  0076                     	ds	2
   455  0078                     ?_displayLED:	
   456  0078                     displayLED@colour:	
   457                           ; 1 bytes @ 0x8
   458                           
   459                           
   460                           ; 1 bytes @ 0x8
   461  0078                     	ds	1
   462  0079                     displayLED@enable:	
   463                           
   464                           ; 1 bytes @ 0x9
   465  0079                     	ds	1
   466                           
   467                           	psect	cstackBANK0
   468  0020                     __pcstackBANK0:	
   469  0020                     ??_displayLED:	
   470                           
   471                           ; 1 bytes @ 0x0
   472  0020                     	ds	6
   473  0026                     displayLED@pos:	
   474                           
   475                           ; 1 bytes @ 0x6
   476  0026                     	ds	1
   477  0027                     ??_main:	
   478                           
   479                           ; 1 bytes @ 0x7
   480  0027                     	ds	8
   481  002F                     main@updateRate:	
   482                           
   483                           ; 1 bytes @ 0xF
   484  002F                     	ds	1
   485  0030                     main@colour:	
   486                           
   487                           ; 1 bytes @ 0x10
   488  0030                     	ds	1
   489  0031                     main@enable:	
   490                           
   491                           ; 1 bytes @ 0x11
   492  0031                     	ds	1
   493  0032                     main@accumulatorTwo:	
   494                           
   495                           ; 1 bytes @ 0x12
   496  0032                     	ds	1
   497  0033                     main@countUp:	
   498                           
   499                           ; 1 bytes @ 0x13
   500  0033                     	ds	1
   501  0034                     main@nextGame:	
   502                           
   503                           ; 1 bytes @ 0x14
   504  0034                     	ds	1
   505  0035                     main@pos:	
   506                           
   507                           ; 1 bytes @ 0x15
   508  0035                     	ds	1
   509  0036                     main@statesShown:	
   510                           
   511                           ; 1 bytes @ 0x16
   512  0036                     	ds	1
   513  0037                     main@gameDisplayed:	
   514                           
   515                           ; 1 bytes @ 0x17
   516  0037                     	ds	1
   517                           
   518                           	psect	maintext
   519  002E                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 96 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  pos             1   21[BANK0 ] char 
   530 ;;  gameDisplaye    1   23[BANK0 ] unsigned char 
   531 ;;  statesShown     1   22[BANK0 ] char 
   532 ;;  nextGame        1   20[BANK0 ] unsigned char 
   533 ;;  countUp         1   19[BANK0 ] unsigned char 
   534 ;;  accumulatorT    1   18[BANK0 ] unsigned char 
   535 ;;  enable          1   17[BANK0 ] unsigned char 
   536 ;;  colour          1   16[BANK0 ] unsigned char 
   537 ;;  updateRate      1   15[BANK0 ] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : B1F/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1
   547 ;;      Params:         0       0       0
   548 ;;      Locals:         0       9       0
   549 ;;      Temps:          0       8       0
   550 ;;      Totals:         0      17       0
   551 ;;Total ram usage:       17 bytes
   552 ;; Hardware stack levels required when called:    2
   553 ;; This function calls:
   554 ;;		___wmul
   555 ;;		_displayLED
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _main
   563  002E                     _main:	
   564                           
   565                           ;main.c: 100: OSCCON = 0b11110000;
   566                           
   567                           ;incstack = 0
   568                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   569  002E  30F0               	movlw	240
   570  002F  0021               	movlb	1	; select bank1
   571  0030  0099               	movwf	25	;volatile
   572                           
   573                           ;main.c: 101: ANSELA = 0;
   574  0031  0023               	movlb	3	; select bank3
   575  0032  018C               	clrf	12	;volatile
   576                           
   577                           ;main.c: 102: ADCON0 = 0;
   578  0033  0021               	movlb	1	; select bank1
   579  0034  019D               	clrf	29	;volatile
   580                           
   581                           ;main.c: 103: TRISA = (1<<3)|(1<<4);
   582  0035  3018               	movlw	24
   583  0036  008C               	movwf	12	;volatile
   584                           
   585                           ;main.c: 104: PORTA = 0;
   586  0037  0020               	movlb	0	; select bank0
   587  0038  018C               	clrf	12	;volatile
   588                           
   589                           ;main.c: 105: WPUA = 0;
   590  0039  0024               	movlb	4	; select bank4
   591  003A  018C               	clrf	12	;volatile
   592                           
   593                           ;main.c: 108: OPTION_REG = 0b10000111;
   594  003B  3087               	movlw	135
   595  003C  0021               	movlb	1	; select bank1
   596  003D  0095               	movwf	21	;volatile
   597                           
   598                           ;main.c: 109: INTCON = 0b10100000;
   599  003E  30A0               	movlw	160
   600  003F  008B               	movwf	11	;volatile
   601                           
   602                           ;main.c: 111: unsigned char colour = 0;
   603  0040  0020               	movlb	0	; select bank0
   604  0041  01B0               	clrf	main@colour
   605                           
   606                           ;main.c: 112: unsigned char enable = 1;
   607  0042  01B1               	clrf	main@enable
   608  0043  0AB1               	incf	main@enable,f
   609                           
   610                           ;main.c: 113: signed char statesShown = -1;
   611  0044  01B6               	clrf	main@statesShown
   612  0045  03B6               	decf	main@statesShown,f
   613                           
   614                           ;main.c: 114: unsigned char accumulatorTwo = 0;
   615  0046  01B2               	clrf	main@accumulatorTwo
   616                           
   617                           ;main.c: 115: unsigned char updateRate = 60;
   618  0047  303C               	movlw	60
   619  0048  00A7               	movwf	??_main
   620  0049  0827               	movf	??_main,w
   621  004A  00AF               	movwf	main@updateRate
   622                           
   623                           ;main.c: 116: unsigned char gameDisplayed = 0;
   624  004B  01B7               	clrf	main@gameDisplayed
   625                           
   626                           ;main.c: 117: unsigned char countUp = 1;
   627  004C  01B3               	clrf	main@countUp
   628  004D  0AB3               	incf	main@countUp,f
   629                           
   630                           ;main.c: 118: unsigned char nextGame = 0;
   631  004E  01B4               	clrf	main@nextGame
   632  004F                     l756:	
   633                           ;main.c: 121: while(1)
   634                           
   635                           
   636                           ;main.c: 122: {
   637                           ;main.c: 124: if (nextGame)
   638  004F  0834               	movf	main@nextGame,w
   639  0050  1903               	btfsc	3,2
   640  0051  2866               	goto	l58
   641                           
   642                           ;main.c: 125: {
   643                           ;main.c: 126: nextGame = 0;
   644  0052  01B4               	clrf	main@nextGame
   645                           
   646                           ;main.c: 127: if (gameDisplayed == 0) countUp = 1;
   647  0053  0837               	movf	main@gameDisplayed,w
   648  0054  1D03               	btfss	3,2
   649  0055  2858               	goto	l764
   650  0056  01B3               	clrf	main@countUp
   651  0057  0AB3               	incf	main@countUp,f
   652  0058                     l764:	
   653                           
   654                           ;main.c: 128: if (gameDisplayed == 15-1) countUp = 0;
   655  0058  300E               	movlw	14
   656  0059  0637               	xorwf	main@gameDisplayed,w
   657  005A  1903               	btfsc	3,2
   658  005B  01B3               	clrf	main@countUp
   659                           
   660                           ;main.c: 130: countUp ? gameDisplayed++ : gameDisplayed--;
   661  005C  0833               	movf	main@countUp,w
   662  005D  1903               	btfsc	3,2
   663  005E  2864               	goto	l772
   664  005F  3001               	movlw	1
   665  0060  00A7               	movwf	??_main
   666  0061  0827               	movf	??_main,w
   667  0062  07B7               	addwf	main@gameDisplayed,f
   668  0063  2866               	goto	l58
   669  0064                     l772:	
   670  0064  3001               	movlw	1
   671  0065  02B7               	subwf	main@gameDisplayed,f
   672  0066                     l58:	
   673                           
   674                           ;main.c: 131: }
   675                           ;main.c: 134: if (sixtyHertz)
   676  0066  0838               	movf	_sixtyHertz,w	;volatile
   677  0067  1903               	btfsc	3,2
   678  0068  28BA               	goto	l792
   679                           
   680                           ;main.c: 135: {
   681                           ;main.c: 136: sixtyHertz = 0;
   682  0069  01B8               	clrf	_sixtyHertz	;volatile
   683                           
   684                           ;main.c: 138: if (accumulatorTwo >= (updateRate - (5 * gameDisplayed - 13)))
   685  006A  0837               	movf	main@gameDisplayed,w
   686  006B  00A7               	movwf	??_main
   687  006C  01A8               	clrf	??_main+1
   688  006D  0827               	movf	??_main,w
   689  006E  00F2               	movwf	___wmul@multiplier
   690  006F  0828               	movf	??_main+1,w
   691  0070  00F3               	movwf	___wmul@multiplier+1
   692  0071  3005               	movlw	5
   693  0072  00F4               	movwf	___wmul@multiplicand
   694  0073  3000               	movlw	0
   695  0074  00F5               	movwf	___wmul@multiplicand+1
   696  0075  2239               	fcall	___wmul
   697  0076  0872               	movf	?___wmul,w
   698  0077  3EF3               	addlw	243
   699  0078  0020               	movlb	0	; select bank0
   700  0079  00A9               	movwf	??_main+2
   701  007A  30FF               	movlw	255
   702  007B  3D73               	addwfc	?___wmul+1,w
   703  007C  00AA               	movwf	??_main+3
   704  007D  09A9               	comf	??_main+2,f
   705  007E  09AA               	comf	??_main+3,f
   706  007F  0AA9               	incf	??_main+2,f
   707  0080  1903               	skipnz
   708  0081  0AAA               	incf	??_main+3,f
   709  0082  082F               	movf	main@updateRate,w
   710  0083  0729               	addwf	??_main+2,w
   711  0084  00AB               	movwf	??_main+4
   712  0085  082A               	movf	??_main+3,w
   713  0086  1803               	skipnc
   714  0087  0A2A               	incf	??_main+3,w
   715  0088  00AC               	movwf	??_main+5
   716  0089  082C               	movf	??_main+5,w
   717  008A  3A80               	xorlw	128
   718  008B  3C80               	sublw	128
   719  008C  1D03               	skipz
   720  008D  2890               	goto	u715
   721  008E  082B               	movf	??_main+4,w
   722  008F  0232               	subwf	main@accumulatorTwo,w
   723  0090                     u715:	
   724  0090  1C03               	skipc
   725  0091  28B5               	goto	l790
   726                           
   727                           ;main.c: 139: {
   728                           ;main.c: 140: accumulatorTwo = 0;
   729  0092  0020               	movlb	0	; select bank0
   730  0093  01B2               	clrf	main@accumulatorTwo
   731                           
   732                           ;main.c: 142: if (statesShown >= 9)
   733  0094  0836               	movf	main@statesShown,w
   734  0095  3A80               	xorlw	128
   735  0096  3E77               	addlw	-137
   736  0097  1C03               	skipc
   737  0098  28A8               	goto	l67
   738                           
   739                           ;main.c: 143: {
   740                           ;main.c: 144: nextGame = 1;
   741  0099  01B4               	clrf	main@nextGame
   742  009A  0AB4               	incf	main@nextGame,f
   743                           
   744                           ;main.c: 145: _delay((unsigned long)((300)*(32000000/4000.0)));
   745  009B  300D               	movlw	13
   746  009C  0020               	movlb	0	; select bank0
   747  009D  00A8               	movwf	??_main+1
   748  009E  302D               	movlw	45
   749  009F  00A7               	movwf	??_main
   750  00A0  30D7               	movlw	215
   751  00A1                     u777:	
   752  00A1  0B89               	decfsz	9,f
   753  00A2  28A1               	goto	u777
   754  00A3  0BA7               	decfsz	??_main,f
   755  00A4  28A1               	goto	u777
   756  00A5  0BA8               	decfsz	??_main+1,f
   757  00A6  28A1               	goto	u777
   758  00A7  3200               	nop2
   759  00A8                     l67:	
   760                           
   761                           ;main.c: 146: }
   762                           ;main.c: 148: (statesShown >= 9) ? statesShown = 0 : statesShown++;
   763  00A8  0020               	movlb	0	; select bank0
   764  00A9  0836               	movf	main@statesShown,w
   765  00AA  3A80               	xorlw	128
   766  00AB  3E77               	addlw	-137
   767  00AC  1C03               	skipc
   768  00AD  28B0               	goto	l788
   769  00AE  01B6               	clrf	main@statesShown
   770  00AF  28BA               	goto	l792
   771  00B0                     l788:	
   772  00B0  3001               	movlw	1
   773  00B1  00A7               	movwf	??_main
   774  00B2  0827               	movf	??_main,w
   775  00B3  07B6               	addwf	main@statesShown,f
   776                           
   777                           ;main.c: 150: }
   778  00B4  28BA               	goto	l792
   779  00B5                     l790:	
   780                           
   781                           ;main.c: 151: else accumulatorTwo++;
   782  00B5  3001               	movlw	1
   783  00B6  0020               	movlb	0	; select bank0
   784  00B7  00A7               	movwf	??_main
   785  00B8  0827               	movf	??_main,w
   786  00B9  07B2               	addwf	main@accumulatorTwo,f
   787  00BA                     l792:	
   788                           
   789                           ;main.c: 152: }
   790                           ;main.c: 155: for (signed char pos = 0; pos <= statesShown; pos++)
   791  00BA  01B5               	clrf	main@pos
   792  00BB                     l808:	
   793  00BB  0836               	movf	main@statesShown,w
   794  00BC  3A80               	xorlw	128
   795  00BD  00A7               	movwf	??_main
   796  00BE  0835               	movf	main@pos,w
   797  00BF  3A80               	xorlw	128
   798  00C0  02A7               	subwf	??_main,f
   799  00C1  1C03               	btfss	3,0
   800  00C2  284F               	goto	l756
   801                           
   802                           ;main.c: 156: {
   803                           ;main.c: 157: (pos % 2 == 0) ? colour = 0 : colour = 1;
   804  00C3  0835               	movf	main@pos,w
   805  00C4  00A7               	movwf	??_main
   806  00C5  01A8               	clrf	??_main+1
   807  00C6  1BA7               	btfsc	??_main,7
   808  00C7  03A8               	decf	??_main+1,f
   809  00C8  1827               	btfsc	??_main,0
   810  00C9  28CC               	goto	l76
   811  00CA  01B0               	clrf	main@colour
   812  00CB  28CE               	goto	l798
   813  00CC                     l76:	
   814  00CC  01B0               	clrf	main@colour
   815  00CD  0AB0               	incf	main@colour,f
   816  00CE                     l798:	
   817                           
   818                           ;main.c: 158: (statesShown == 9) ? enable = 0 : enable = 1;
   819  00CE  3009               	movlw	9
   820  00CF  0636               	xorwf	main@statesShown,w
   821  00D0  1D03               	btfss	3,2
   822  00D1  28D4               	goto	l80
   823  00D2  01B1               	clrf	main@enable
   824  00D3  28D6               	goto	l802
   825  00D4                     l80:	
   826  00D4  01B1               	clrf	main@enable
   827  00D5  0AB1               	incf	main@enable,f
   828  00D6                     l802:	
   829                           
   830                           ;main.c: 159: displayLED(positions[gameDisplayed][pos], colour, enable);
   831  00D6  0830               	movf	main@colour,w
   832  00D7  00A7               	movwf	??_main
   833  00D8  0827               	movf	??_main,w
   834  00D9  00F8               	movwf	displayLED@colour
   835  00DA  0831               	movf	main@enable,w
   836  00DB  00A8               	movwf	??_main+1
   837  00DC  0828               	movf	??_main+1,w
   838  00DD  00F9               	movwf	displayLED@enable
   839  00DE  0837               	movf	main@gameDisplayed,w
   840  00DF  00A9               	movwf	??_main+2
   841  00E0  01AA               	clrf	??_main+3
   842  00E1  0829               	movf	??_main+2,w
   843  00E2  00F2               	movwf	___wmul@multiplier
   844  00E3  082A               	movf	??_main+3,w
   845  00E4  00F3               	movwf	___wmul@multiplier+1
   846  00E5  3009               	movlw	9
   847  00E6  00F4               	movwf	___wmul@multiplicand
   848  00E7  3000               	movlw	0
   849  00E8  00F5               	movwf	___wmul@multiplicand+1
   850  00E9  2239               	fcall	___wmul
   851  00EA  30B2               	movlw	low (_positions| (0+32768))
   852  00EB  0020               	movlb	0	; select bank0
   853  00EC  00AB               	movwf	??_main+4
   854  00ED  3081               	movlw	high (_positions| (0+32768))
   855  00EE  00AC               	movwf	??_main+5
   856  00EF  0872               	movf	?___wmul,w
   857  00F0  072B               	addwf	??_main+4,w
   858  00F1  00AD               	movwf	??_main+6
   859  00F2  0873               	movf	?___wmul+1,w
   860  00F3  3D2C               	addwfc	??_main+5,w
   861  00F4  00AE               	movwf	??_main+7
   862  00F5  0835               	movf	main@pos,w
   863  00F6  072D               	addwf	??_main+6,w
   864  00F7  0084               	movwf	4
   865  00F8  082E               	movf	??_main+7,w
   866  00F9  1803               	skipnc
   867  00FA  0A2E               	incf	??_main+7,w
   868  00FB  0085               	movwf	5
   869  00FC  0800               	movf	0,w	;code access
   870  00FD  210D               	fcall	_displayLED
   871                           
   872                           ;main.c: 160: _delay((unsigned long)((500)*(32000000/4000000.0)));
   873  00FE  3006               	movlw	6
   874  00FF  0020               	movlb	0	; select bank0
   875  0100  00A7               	movwf	??_main
   876  0101  3030               	movlw	48
   877  0102                     u787:	
   878  0102  0B89               	decfsz	9,f
   879  0103  2902               	goto	u787
   880  0104  0BA7               	decfsz	??_main,f
   881  0105  2902               	goto	u787
   882  0106  0000               	nop
   883  0107  3001               	movlw	1
   884  0108  0020               	movlb	0	; select bank0
   885  0109  00A7               	movwf	??_main
   886  010A  0827               	movf	??_main,w
   887  010B  07B5               	addwf	main@pos,f
   888  010C  28BB               	goto	l808
   889  010D                     __end_of_main:	
   890                           
   891                           	psect	text1
   892  010D                     __ptext1:	
   893 ;; *************** function _displayLED *****************
   894 ;; Defined at:
   895 ;;		line 61 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  pos             1    wreg     unsigned char 
   898 ;;  colour          1    8[COMMON] unsigned char 
   899 ;;  enable          1    9[COMMON] unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  pos             1    6[BANK0 ] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1
   911 ;;      Params:         2       0       0
   912 ;;      Locals:         0       1       0
   913 ;;      Temps:          0       6       0
   914 ;;      Totals:         2       7       0
   915 ;;Total ram usage:        9 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _displayLED
   927  010D                     _displayLED:	
   928                           
   929                           ;incstack = 0
   930                           ; Regs used in _displayLED: [wreg-fsr0h+status,2+status,0+pclath]
   931                           ;displayLED@pos stored from wreg
   932  010D  0020               	movlb	0	; select bank0
   933  010E  00A6               	movwf	displayLED@pos
   934                           
   935                           ;main.c: 67: const unsigned char ledAnode[10] = {1,4,2,5,2,5,4,5,4};
   936                           ;main.c: 68: const unsigned char ledCathode[10] = {0,2,1,2,0,4,1,1,0};
   937                           ;main.c: 70: if (enable)
   938  010F  0879               	movf	displayLED@enable,w
   939  0110  1903               	btfsc	3,2
   940  0111  29AD               	goto	l730
   941                           
   942                           ;main.c: 71: {
   943                           ;main.c: 72: if (colour == 0)
   944  0112  0878               	movf	displayLED@colour,w
   945  0113  1D03               	btfss	3,2
   946  0114  295D               	goto	l724
   947                           
   948                           ;main.c: 73: {
   949                           ;main.c: 74: TRISA = 0xFF & ~(1<<ledAnode[pos-1]|1<<ledCathode[pos-1]);
   950  0115  3001               	movlw	1
   951  0116  00A0               	movwf	??_displayLED
   952  0117  0826               	movf	displayLED@pos,w
   953  0118  3EFF               	addlw	255
   954  0119  00A1               	movwf	??_displayLED+1
   955  011A  30FF               	movlw	255
   956  011B  1803               	skipnc
   957  011C  3000               	movlw	0
   958  011D  00A2               	movwf	??_displayLED+2
   959  011E  3054               	movlw	low (displayLED@ledCathode| (0+32768))
   960  011F  0721               	addwf	??_displayLED+1,w
   961  0120  0084               	movwf	4
   962  0121  3082               	movlw	high (displayLED@ledCathode| (0+32768))
   963  0122  3D22               	addwfc	??_displayLED+2,w
   964  0123  0085               	movwf	5
   965  0124  0800               	movf	0,w	;code access
   966  0125  0A89               	incf	9,f
   967  0126  2928               	goto	u594
   968  0127                     u595:	
   969  0127  35A0               	lslf	??_displayLED,f
   970  0128                     u594:	
   971  0128  0B89               	decfsz	9,f
   972  0129  2927               	goto	u595
   973  012A  3001               	movlw	1
   974  012B  00A3               	movwf	??_displayLED+3
   975  012C  0826               	movf	displayLED@pos,w
   976  012D  3EFF               	addlw	255
   977  012E  00A4               	movwf	??_displayLED+4
   978  012F  30FF               	movlw	255
   979  0130  1803               	skipnc
   980  0131  3000               	movlw	0
   981  0132  00A5               	movwf	??_displayLED+5
   982  0133  305E               	movlw	low (displayLED@ledAnode| (0+32768))
   983  0134  0724               	addwf	??_displayLED+4,w
   984  0135  0084               	movwf	4
   985  0136  3082               	movlw	high (displayLED@ledAnode| (0+32768))
   986  0137  3D25               	addwfc	??_displayLED+5,w
   987  0138  0085               	movwf	5
   988  0139  0800               	movf	0,w	;code access
   989  013A  0A89               	incf	9,f
   990  013B  293D               	goto	u604
   991  013C                     u605:	
   992  013C  35A3               	lslf	??_displayLED+3,f
   993  013D                     u604:	
   994  013D  0B89               	decfsz	9,f
   995  013E  293C               	goto	u605
   996  013F  0823               	movf	??_displayLED+3,w
   997  0140  0420               	iorwf	??_displayLED,w
   998  0141  3AFF               	xorlw	255
   999  0142  0021               	movlb	1	; select bank1
  1000  0143  008C               	movwf	12	;volatile
  1001                           
  1002                           ;main.c: 75: PORTA = 0 | (1<<ledAnode[pos-1]);
  1003  0144  3001               	movlw	1
  1004  0145  0020               	movlb	0	; select bank0
  1005  0146  00A0               	movwf	??_displayLED
  1006  0147  0826               	movf	displayLED@pos,w
  1007  0148  3EFF               	addlw	255
  1008  0149  00A1               	movwf	??_displayLED+1
  1009  014A  30FF               	movlw	255
  1010  014B  1803               	skipnc
  1011  014C  3000               	movlw	0
  1012  014D  00A2               	movwf	??_displayLED+2
  1013  014E  305E               	movlw	low (displayLED@ledAnode| (0+32768))
  1014  014F  0721               	addwf	??_displayLED+1,w
  1015  0150  0084               	movwf	4
  1016  0151  3082               	movlw	high (displayLED@ledAnode| (0+32768))
  1017  0152  3D22               	addwfc	??_displayLED+2,w
  1018  0153  0085               	movwf	5
  1019  0154  0800               	movf	0,w	;code access
  1020  0155  0A89               	incf	9,f
  1021  0156  2958               	goto	u614
  1022  0157                     u615:	
  1023  0157  35A0               	lslf	??_displayLED,f
  1024  0158                     u614:	
  1025  0158  0B89               	decfsz	9,f
  1026  0159  2957               	goto	u615
  1027  015A  0820               	movf	??_displayLED,w
  1028  015B  008C               	movwf	12	;volatile
  1029                           
  1030                           ;main.c: 76: }
  1031  015C  0008               	return
  1032  015D                     l724:	
  1033                           
  1034                           ;main.c: 77: else if (colour == 1)
  1035  015D  0378               	decf	displayLED@colour,w
  1036  015E  1D03               	btfss	3,2
  1037  015F  29A8               	goto	l728
  1038                           
  1039                           ;main.c: 78: {
  1040                           ;main.c: 79: TRISA = 0xFF & ~(1<<ledAnode[pos-1]|1<<ledCathode[pos-1]);
  1041  0160  3001               	movlw	1
  1042  0161  00A0               	movwf	??_displayLED
  1043  0162  0826               	movf	displayLED@pos,w
  1044  0163  3EFF               	addlw	255
  1045  0164  00A1               	movwf	??_displayLED+1
  1046  0165  30FF               	movlw	255
  1047  0166  1803               	skipnc
  1048  0167  3000               	movlw	0
  1049  0168  00A2               	movwf	??_displayLED+2
  1050  0169  3054               	movlw	low (displayLED@ledCathode| (0+32768))
  1051  016A  0721               	addwf	??_displayLED+1,w
  1052  016B  0084               	movwf	4
  1053  016C  3082               	movlw	high (displayLED@ledCathode| (0+32768))
  1054  016D  3D22               	addwfc	??_displayLED+2,w
  1055  016E  0085               	movwf	5
  1056  016F  0800               	movf	0,w	;code access
  1057  0170  0A89               	incf	9,f
  1058  0171  2973               	goto	u634
  1059  0172                     u635:	
  1060  0172  35A0               	lslf	??_displayLED,f
  1061  0173                     u634:	
  1062  0173  0B89               	decfsz	9,f
  1063  0174  2972               	goto	u635
  1064  0175  3001               	movlw	1
  1065  0176  00A3               	movwf	??_displayLED+3
  1066  0177  0826               	movf	displayLED@pos,w
  1067  0178  3EFF               	addlw	255
  1068  0179  00A4               	movwf	??_displayLED+4
  1069  017A  30FF               	movlw	255
  1070  017B  1803               	skipnc
  1071  017C  3000               	movlw	0
  1072  017D  00A5               	movwf	??_displayLED+5
  1073  017E  305E               	movlw	low (displayLED@ledAnode| (0+32768))
  1074  017F  0724               	addwf	??_displayLED+4,w
  1075  0180  0084               	movwf	4
  1076  0181  3082               	movlw	high (displayLED@ledAnode| (0+32768))
  1077  0182  3D25               	addwfc	??_displayLED+5,w
  1078  0183  0085               	movwf	5
  1079  0184  0800               	movf	0,w	;code access
  1080  0185  0A89               	incf	9,f
  1081  0186  2988               	goto	u644
  1082  0187                     u645:	
  1083  0187  35A3               	lslf	??_displayLED+3,f
  1084  0188                     u644:	
  1085  0188  0B89               	decfsz	9,f
  1086  0189  2987               	goto	u645
  1087  018A  0823               	movf	??_displayLED+3,w
  1088  018B  0420               	iorwf	??_displayLED,w
  1089  018C  3AFF               	xorlw	255
  1090  018D  0021               	movlb	1	; select bank1
  1091  018E  008C               	movwf	12	;volatile
  1092                           
  1093                           ;main.c: 80: PORTA = 0 | (1<<ledCathode[pos-1]);
  1094  018F  3001               	movlw	1
  1095  0190  0020               	movlb	0	; select bank0
  1096  0191  00A0               	movwf	??_displayLED
  1097  0192  0826               	movf	displayLED@pos,w
  1098  0193  3EFF               	addlw	255
  1099  0194  00A1               	movwf	??_displayLED+1
  1100  0195  30FF               	movlw	255
  1101  0196  1803               	skipnc
  1102  0197  3000               	movlw	0
  1103  0198  00A2               	movwf	??_displayLED+2
  1104  0199  3054               	movlw	low (displayLED@ledCathode| (0+32768))
  1105  019A  0721               	addwf	??_displayLED+1,w
  1106  019B  0084               	movwf	4
  1107  019C  3082               	movlw	high (displayLED@ledCathode| (0+32768))
  1108  019D  3D22               	addwfc	??_displayLED+2,w
  1109  019E  0085               	movwf	5
  1110  019F  0800               	movf	0,w	;code access
  1111  01A0  0A89               	incf	9,f
  1112  01A1  29A3               	goto	u654
  1113  01A2                     u655:	
  1114  01A2  35A0               	lslf	??_displayLED,f
  1115  01A3                     u654:	
  1116  01A3  0B89               	decfsz	9,f
  1117  01A4  29A2               	goto	u655
  1118  01A5  0820               	movf	??_displayLED,w
  1119  01A6  008C               	movwf	12	;volatile
  1120                           
  1121                           ;main.c: 81: }
  1122  01A7  0008               	return
  1123  01A8                     l728:	
  1124                           
  1125                           ;main.c: 82: else
  1126                           ;main.c: 83: {
  1127                           ;main.c: 84: TRISA = 0;
  1128  01A8  0021               	movlb	1	; select bank1
  1129  01A9  018C               	clrf	12	;volatile
  1130                           
  1131                           ;main.c: 85: PORTA= 0;
  1132  01AA  0020               	movlb	0	; select bank0
  1133  01AB  018C               	clrf	12	;volatile
  1134                           
  1135                           ;main.c: 86: }
  1136                           ;main.c: 87: }
  1137  01AC  0008               	return
  1138  01AD                     l730:	
  1139                           
  1140                           ;main.c: 88: else
  1141                           ;main.c: 89: {
  1142                           ;main.c: 90: TRISA = 0;
  1143  01AD  0021               	movlb	1	; select bank1
  1144  01AE  018C               	clrf	12	;volatile
  1145                           
  1146                           ;main.c: 91: PORTA= 0;
  1147  01AF  0020               	movlb	0	; select bank0
  1148  01B0  018C               	clrf	12	;volatile
  1149  01B1  0008               	return
  1150  01B2                     __end_of_displayLED:	
  1151                           
  1152                           	psect	text2
  1153  0239                     __ptext2:	
  1154 ;; *************** function ___wmul *****************
  1155 ;; Defined at:
  1156 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  multiplier      2    2[COMMON] unsigned int 
  1159 ;;  multiplicand    2    4[COMMON] unsigned int 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  product         2    6[COMMON] unsigned int 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  2    2[COMMON] unsigned int 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1
  1171 ;;      Params:         4       0       0
  1172 ;;      Locals:         2       0       0
  1173 ;;      Temps:          0       0       0
  1174 ;;      Totals:         6       0       0
  1175 ;;Total ram usage:        6 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function ___wmul
  1187  0239                     ___wmul:	
  1188                           
  1189                           ;incstack = 0
  1190                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1191  0239  01F6               	clrf	___wmul@product
  1192  023A  01F7               	clrf	___wmul@product+1
  1193  023B                     l608:	
  1194  023B  1C72               	btfss	___wmul@multiplier,0
  1195  023C  2A41               	goto	l90
  1196  023D  0874               	movf	___wmul@multiplicand,w
  1197  023E  07F6               	addwf	___wmul@product,f
  1198  023F  0875               	movf	___wmul@multiplicand+1,w
  1199  0240  3DF7               	addwfc	___wmul@product+1,f
  1200  0241                     l90:	
  1201  0241  3001               	movlw	1
  1202  0242                     u395:	
  1203  0242  35F4               	lslf	___wmul@multiplicand,f
  1204  0243  0DF5               	rlf	___wmul@multiplicand+1,f
  1205  0244  0B89               	decfsz	9,f
  1206  0245  2A42               	goto	u395
  1207  0246  3001               	movlw	1
  1208  0247                     u405:	
  1209  0247  36F3               	lsrf	___wmul@multiplier+1,f
  1210  0248  0CF2               	rrf	___wmul@multiplier,f
  1211  0249  0B89               	decfsz	9,f
  1212  024A  2A47               	goto	u405
  1213  024B  0872               	movf	___wmul@multiplier,w
  1214  024C  0473               	iorwf	___wmul@multiplier+1,w
  1215  024D  1D03               	btfss	3,2
  1216  024E  2A3B               	goto	l608
  1217  024F  0877               	movf	___wmul@product+1,w
  1218  0250  00F3               	movwf	?___wmul+1
  1219  0251  0876               	movf	___wmul@product,w
  1220  0252  00F2               	movwf	?___wmul
  1221  0253  0008               	return
  1222  0254                     __end_of___wmul:	
  1223                           
  1224                           	psect	intentry
  1225  0004                     __pintentry:	
  1226 ;; *************** function _isr *****************
  1227 ;; Defined at:
  1228 ;;		line 36 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1
  1242 ;;      Params:         0       0       0
  1243 ;;      Locals:         0       0       0
  1244 ;;      Temps:          2       0       0
  1245 ;;      Totals:         2       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		Interrupt level 1
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255  0004                     _isr:	
  1256                           
  1257                           ;incstack = 0
  1258  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1259                           
  1260                           ; Regs used in _isr: [wreg+status,2+status,0]
  1261  0005  3180               	pagesel	$
  1262  0006  0020               	movlb	0	; select bank0
  1263  0007  087F               	movf	127,w
  1264  0008  00F1               	movwf	??_isr+1
  1265                           
  1266                           ;main.c: 39: if(T0IE && T0IF)
  1267  0009  1A8B               	btfsc	11,5	;volatile
  1268  000A  1D0B               	btfss	11,2	;volatile
  1269  000B  2822               	goto	i1l39
  1270                           
  1271                           ;main.c: 40: {
  1272                           ;main.c: 41: T0IF = 0;
  1273  000C  110B               	bcf	11,2	;volatile
  1274                           
  1275                           ;main.c: 42: oneTwentyHertz = 1;
  1276  000D  3001               	movlw	1
  1277  000E  00F0               	movwf	??_isr
  1278  000F  0870               	movf	??_isr,w
  1279  0010  00FB               	movwf	_oneTwentyHertz	;volatile
  1280                           
  1281                           ;main.c: 45: if (oneTwentyHertz)
  1282  0011  087B               	movf	_oneTwentyHertz,w	;volatile
  1283  0012  1903               	btfsc	3,2
  1284  0013  2822               	goto	i1l39
  1285                           
  1286                           ;main.c: 46: {
  1287                           ;main.c: 47: oneTwentyHertz = 0;
  1288  0014  01FB               	clrf	_oneTwentyHertz	;volatile
  1289                           
  1290                           ;main.c: 49: if (accumulator >= 1)
  1291  0015  087A               	movf	_accumulator,w	;volatile
  1292  0016  1903               	btfsc	3,2
  1293  0017  281E               	goto	i1l638
  1294                           
  1295                           ;main.c: 50: {
  1296                           ;main.c: 51: accumulator = 0;
  1297  0018  01FA               	clrf	_accumulator	;volatile
  1298                           
  1299                           ;main.c: 52: sixtyHertz = 1;
  1300  0019  3001               	movlw	1
  1301  001A  00F0               	movwf	??_isr
  1302  001B  0870               	movf	??_isr,w
  1303  001C  00B8               	movwf	_sixtyHertz	;volatile
  1304                           
  1305                           ;main.c: 53: }
  1306  001D  2822               	goto	i1l39
  1307  001E                     i1l638:	
  1308                           
  1309                           ;main.c: 54: else
  1310                           ;main.c: 55: accumulator++;
  1311  001E  3001               	movlw	1
  1312  001F  00F0               	movwf	??_isr
  1313  0020  0870               	movf	??_isr,w
  1314  0021  07FA               	addwf	_accumulator,f	;volatile
  1315  0022                     i1l39:	
  1316  0022  0871               	movf	??_isr+1,w
  1317  0023  00FF               	movwf	127
  1318  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1319  0025  0009               	retfie
  1320  0026                     __end_of_isr:	
  1321  007E                     btemp	set	126	;btemp
  1322  007E                     int$flags	set	126
  1323  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    155
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      25
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_displayLED
    _displayLED->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayLED

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    1312
                                              7 BANK0     17    17      0
                             ___wmul
                         _displayLED
 ---------------------------------------------------------------------------------
 (1) _displayLED                                           9     7      2     409
                                              8 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     304
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _displayLED
     ___wmul (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      25       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 13 20:32:42 2019

                          l80 00D4                            l90 0241                            l58 0066  
                          l67 00A8                            l76 00CC           ___wmul@multiplicand 0074  
                         l608 023B                           l730 01AD                           l802 00D6  
                         l724 015D                           l728 01A8                           l808 00BB  
                         l772 0064                           l764 0058                           l756 004F  
                         l790 00B5                           l792 00BA                           l788 00B0  
                         l798 00CE                           u405 0247                           u604 013D  
                         u605 013C                           u614 0158                           u615 0157  
                         u634 0173                           u395 0242                           u635 0172  
                         u715 0090                           u644 0188                           u645 0187  
                         u654 01A3                           u655 01A2                           u594 0128  
                         u595 0127                           u777 00A1                           u787 0102  
                         _isr 0004                           wreg 0009                  __CFG_LVP$OFF 0000  
                        ?_isr 0070                          _T0IE 005D                          _T0IF 005A  
                 main@countUp 0033                          i1l39 0022                          _WPUA 020C  
                        _main 002E                          fsr0h 0005                          indf0 0000  
                        fsr0l 0004                          btemp 007E                          start 0026  
                       ??_isr 0070                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       i1l638 001E                         _PORTA 000C                         _TRISA 008C  
                main@nextGame 0034                         status 0003                         wtemp0 007E  
              __CFG_MCLRE$OFF 0000               __initialization 0027                  __end_of_main 010D  
                      ??_main 0027                        _ADCON0 009D                        _ANSELA 018C  
               displayLED@pos 0026                        _INTCON 000B                        _OSCCON 0099  
                      ___wmul 0239            main@accumulatorTwo 0032       __end_of__initialization 002B  
              __pcstackCOMMON 0070             main@gameDisplayed 0037                    __pbssBANK0 0038  
                  __pmaintext 002E                       ?___wmul 0072                    __pintentry 0004  
                  _displayLED 010D               __size_of___wmul 001B    __end_ofdisplayLED@ledAnode 0268  
                     __ptext1 010D                       __ptext2 0239                  __size_of_isr 0022  
            displayLED@enable 0079              displayLED@colour 0078                       main@pos 0035  
        end_of_initialization 002B                main@updateRate 002F             __end_of_positions 0239  
            __CFG_FOSC$INTOSC 0000                   ?_displayLED 0078                    _sixtyHertz 0038  
                  main@enable 0031                    main@colour 0030                __end_of___wmul 0254  
         start_initialization 0027                   __end_of_isr 0026                   _accumulator 007A  
                    ??___wmul 0076           __size_of_displayLED 00A5                   __pbssCOMMON 007A  
                   ___latbits 0000                 __pcstackBANK0 0020  __end_ofdisplayLED@ledCathode 025E  
          displayLED@ledAnode 025E                ___wmul@product 0076                     _positions 01B2  
           ___wmul@multiplier 0072                  ??_displayLED 0020            __end_of_displayLED 01B2  
        displayLED@ledCathode 0254                 __size_of_main 00DF                      int$flags 007E  
                    intlevel1 0000                 __pstringtext1 01B2                 __pstringtext2 0254  
               __pstringtext3 025E               main@statesShown 0036                _oneTwentyHertz 007B  
                  _OPTION_REG 0095  
